# C output configuration

# generic settings
source=json.peg
name=output.GEN

# generator-specific settings
anode_type=ANode*
alist_type=ANodeList
lexer_type=Lexer*
lexer_pos_type=LexerPos

preamble_h <<EOF
#ifndef GRAMMAR_H_
#define GRAMMAR_H_

#include "common.h"

EOF>>
postamble_h <<EOF

#endif /* GRAMMAR_H_ */
EOF>>

preamble_c <<EOF
#include "common.h"

#include <string.h>
static ANodeList elist = {};
#define MKLIST_EMPTY()          elist
#define MKNODE_TOKEN(TOK)       anode_create((TOK).kind)
#define MKNODE_SEM(KIND)        anode_create(#KIND)
#define MKNODE_NIL()            NULL
#define LEXER_NEXT(lex)         if(!(lex)->next((lex))) return false;
#define LEXER_CHECK(lex, KIND)  (!strcmp((lex)->tok.kind, (#KIND)))
#define LEXER_VALUE(lex)        ((lex)->tok)
#define LEXER_GETPOS(lex)       ((lex)->pos)
#define LEXER_SETPOS(lex, POS)  ((lex)->pos = (POS))

EOF>>

postamble_c <<EOF
EOF>>
